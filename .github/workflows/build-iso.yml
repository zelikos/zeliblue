# Derived from fiftydinar's gidro-os https://github.com/fiftydinar/gidro-os/blob/main/.github/workflows/build_iso.yml
# as well as from Bluefin https://github.com/ublue-os/bluefin/blob/main/.github/workflows/reusable-build-iso.yml

name: Build ISO

on:
  schedule:
    - cron: "0 0 1 * *" # Build & upload ISO every month

  workflow_dispatch:
    branches:
      - main
    paths:
      - ".github/workflows/build_iso.yml"

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image_name: [zeliblue]
        major_version: [40]
        image_tag: [stable]

    steps:
      - name: Fetch current date
        shell: bash
        run: |
          TIMESTAMP="$(date +%d-%m-%Y)"
          echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Build ISO
        uses: jasonn3/build-container-installer@v1.2.2
        id: build
        with:
          arch: x86_64
          version: ${{ matrix.major_version }}
          image_repo: ${{ env.IMAGE_REGISTRY }}
          image_name: ${{ matrix.image_name }}
          image_tag: ${{ matrix.image_tag }}
          variant: "Silverblue"
          enrollment_password: "universalblue"
          secure_boot_key_url: "https://github.com/ublue-os/akmods/raw/main/certs/public_key.der"
          iso_name: ${{ matrix.image_name }}.iso
          enable_cache_dnf: "false"
          enable_cache_skopeo: "false"
          # enable_flatpak_dependencies: "false"
          # flatpak_remote_name: "flathub-system"
          # flatpak_remote_url: "https://flathub.org/repo/flathub.flatpakrepo"

      - name: Move ISO to Upload Directory
        id: upload-directory
        shell: bash
        run: |
          ISO_UPLOAD_DIR=${{ github.workspace }}/upload
          mkdir ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }} ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}-CHECKSUM ${ISO_UPLOAD_DIR}
          echo "iso-upload-dir=${ISO_UPLOAD_DIR}" >> $GITHUB_OUTPUT

      - name: Upload ISO to R2 Zeliblue Bucket
        if: github.ref_name == 'main'
        shell: bash
        env:
          RCLONE_CONFIG_R2_TYPE: s3
          RCLONE_CONFIG_R2_PROVIDER: Cloudflare
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_REGION: auto
          RCLONE_CONFIG_R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          SOURCE_DIR: ${{ steps.upload-directory.outputs.iso-upload-dir }}
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone
          rclone copy $SOURCE_DIR R2:zeliblue
